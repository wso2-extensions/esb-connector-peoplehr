<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="uploadEmployeeDocument" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="employeeId" description="The ID of the employee."/>
    <parameter name="category" description="The category of the document."/>
    <parameter name="employeeAccess" description="The boolean value for employee access."/>
    <parameter name="documentName" description="The name of the document."/>
    <parameter name="file" description="The base64 data for a document."/>
    <parameter name="managerAccess" description="The boolean value for manager access."/>
    <parameter name="signatureRequired" description="The boolean value for signature required."/>
    <parameter name="description" description="Description of the document."/>
    <sequence>
        <property name="uri.var.employeeId" expression="$func:employeeId"/>
        <property name="uri.var.category" expression="$func:category"/>
        <property name="uri.var.employeeAccess" expression="$func:employeeAccess"/>
        <property name="uri.var.documentName" expression="$func:documentName"/>
        <property name="uri.var.file" expression="$func:file"/>
        <property name="uri.var.managerAccess" expression="$func:managerAccess"/>
        <property name="uri.var.signatureRequired" expression="$func:signatureRequired"/>
        <property name="uri.var.description" expression="$func:description"/>
        <payloadFactory media-type="json">
            <format>
                {
                    "APIKey": "$1",
                    "EmployeeId": "$2",
                    "Action": "UploadEmployeeDocument",
                    "Category": "$3",
                    "EmployeeAccess": "$4",
                    "DocumentName":"$5",
                    "File": "$6"
                }
            </format>
            <args>
                <arg expression="$ctx:uri.var.apiKey"/>
                <arg expression="$ctx:uri.var.employeeId"/>
                <arg expression="$ctx:uri.var.category"/>
                <arg expression="$ctx:uri.var.employeeAccess"/>
                <arg expression="$ctx:uri.var.documentName"/>
                <arg expression="$ctx:uri.var.file"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
	            //request body param variables
	            var payload = mc.getPayloadJSON();
	            var managerAccess = mc.getProperty('uri.var.managerAccess');
	            var signatureRequired = mc.getProperty('uri.var.signatureRequired');
	            var description = mc.getProperty('uri.var.description');

	            if(managerAccess != null && managerAccess != "") {
	                payload.ManagerAccess = managerAccess;
	            }
	            if(signatureRequired != null && signatureRequired != "") {
	            	payload.SignatureRequired = signatureRequired;
	            }
	            if(description != null && description != "") {
                    payload.Description = description;
	            }
	            mc.setPayloadJSON(payload);
        	]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/EmployeeDocument"/>
            </endpoint>
        </call>
        <!-- Remove custom header information in response -->
        <header name="X-AspNet-Version" scope="transport" action="remove"/>
        <header name="X-Powered-By" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Headers" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Origin" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Methods" scope="transport" action="remove"/>
        <header name="Cache-Control" scope="transport" action="remove"/>
    </sequence>
</template>